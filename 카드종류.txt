[카드 과일 종류]
사과 바나나 라임 딸기


[각 종류|개수별 고유 값]
for문으로 개수별 위치 조정, 위치를 나타내는 클래스, 카드 개수 주의
🍎🍌🍐🍒
1 : 사과 1
2 : 사과 2
3 : 사과 3
4 : 사과 4
5 : 사과 5

6 : 바나나 1
7 : 바나나 2
8 : 바나나 3
9 : 바나나 4
10 : 바나나 5

11 : 라임 1
12 : 라임 2
13 : 라임 3
14 : 라임 4
15 : 라임 5

16 : 체리 1
17 : 체리 2
18 : 체리 3
19 : 체리 4
20 : 체리 5


                switch (playerNum)
                {
                case 1: gotoxy(5, 4); break;
                case 2: gotoxy(51, 4); break;
                case 3: gotoxy(5, 21); break;
                case 4: gotoxy(51, 21); break;
                }


                frontCardPrint
                gotoxy(10, 14);
                gotoxy(20, 14);
                gotoxy(30, 14);
                gotoxy(40, 14);



[추가하기]
00번 차례 print메서드
각 사용자 카드 gotoxy -> 카드에 맞춰 색깔 원 출력
게임시작 전 
1 vs Com
1 vs 1 vs 1
1 vs 1 vs 1 vs 1 고르기


[p1]
    gotoxy(0, 8);
    cout << "보유 카드 수 : " << " 장";
    gotoxy(0, 9);
    cout << "판에 놓인 카드 수 : " << " 장";

[p2]
    gotoxy(48, 8);
    cout << "보유 카드 수 : " << " 장";
    gotoxy(48, 9);
    cout << "판에 놓인 카드 수 : " << " 장";

[p3]
    gotoxy(0, 30);
    cout << "보유 카드 수 : " << " 장";
    gotoxy(0, 31);
    cout << "판에 놓인 카드 수 : " << " 장";

[p4]
    gotoxy(48, 30);
    cout << "보유 카드 수 : " << " 장";
    gotoxy(48, 31);
    cout << "판에 놓인 카드 수 : " << " 장";



[++]
컴퓨터 종치는것 딜레이 (랜덤)으로 조정
카드 선택해서 그리는것 먼저

[comment]
메인에서 모든 종류의 카드 생성
카드 객체 : 카드 종류, 카드 과일 갯수
사용자 객체 : 카드 갯수 && 카드 가지기(분배받기), 카드 내기, 카드 얻기,
카드 낼 순서가 오면 따로 화면 띄우기 (회원님의 차례입니다. space버튼을 통해 카드를 내세요)
카드 띄우는 방법? 





+)종쳐서 이겼을 때 다음 턴이 바로 카드 내는게 아니라 잠깐 기다리도록 하는 기능 추가
+)카드 다썼을 때 null 디버그 오류 해결






 //카드 1
    gotoxy(10, 14);
    cout << "┌──────────────┐";
    for (int i = 15; i < 25; i++) {
        gotoxy(10, i);
        cout << "│              │";
    }
    gotoxy(10, 25);
    cout << "└──────────────┘";

    //카드 2
    gotoxy(20, 14);
    cout << "┌──────────────┐";
    for (int i = 15; i < 25; i++) {
        gotoxy(20, i);
        cout << "│              │";
    }
    gotoxy(20, 25);
    cout << "└──────────────┘";

    //카드 3
    gotoxy(30, 14);
    cout << "┌──────────────┐";
    for (int i = 15; i < 25; i++) {
        gotoxy(30, i);
        cout << "│              │";
    }
    gotoxy(30, 25);
    cout << "└──────────────┘";

    //카드 4
    gotoxy(40, 14);
    cout << "┌──────────────┐";
    for (int i = 15; i < 25; i++) {
        gotoxy(40, i);
        cout << "│              │";
    }
    gotoxy(40, 25);
    cout << "└──────────────┘";












#include "drawCard.h"
#include <iostream>

using namespace std;
void emptyCardPrint() {
    cout << "                                               "
        << "┏━━━━━━━━━━━━━━┓" << endl;
    for (int i = 0; i < 7; ++i)
        cout << "                                               "
        << "┃           ┃" << endl;

    cout << "                                               "
        << "┗━━━━━━━━━━━━━━┛" << endl;
}
void frontCardPrint(Card card) {
    //카드 타입
    int type = card.getType();
    char fruit = 'e';
    switch (type) {
        case 1: fruit = '!'; break; 
        case 2: fruit = '@'; break; 
        case 3: fruit = '#'; break;     
        case 4: fruit = '$'; break; 
    }

    switch (card.getNumber()) {
        case 1:
            cout << "                                               "
                << "┏━━━━━━━━━━━━━━┓" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃     " << fruit << "     ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┗━━━━━━━━━━━━━━┛" << endl;
            break;
        case 2:
            cout << "                                               "
                << "┏━━━━━━━━━━━━━━┓" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃     " << fruit << "     ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃     " << fruit << "     ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┗━━━━━━━━━━━━━━┛" << endl;
            break;
        case 3:
            cout << "                                               "
                << "┏━━━━━━━━━━━━━━┓" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃     " << fruit << "     ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃   " << fruit << "   " << fruit << "   ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┗━━━━━━━━━━━━━━┛" << endl;
            break;
        case 4:
            cout << "                                               "
                << "┏━━━━━━━━━━━━━━┓" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃   " << fruit << "   " << fruit << "   ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃   " << fruit << "   " << fruit << "   ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┗━━━━━━━━━━━━━━┛" << endl;
            break;
        case 5:
            cout << "                                               "
                << "┏━━━━━━━━━━━━━━┓" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃   " << fruit << "   " << fruit << "   ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃     " << fruit << "     ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┃   " << fruit << "   " << fruit << "   ┃" << endl;
            cout << "                                               "
                << "┃           ┃" << endl;
            cout << "                                               "
                << "┗━━━━━━━━━━━━━━┛" << endl;
            break;
        default:
            emptyCardPrint();
    }
}

